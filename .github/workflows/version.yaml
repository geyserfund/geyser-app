name: Version Check

on:
  pull_request:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    # Add permissions for status checks
    permissions:
      statuses: write
      contents: read

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Get PR version
        id: pr_version
        run: |
          PR_VERSION=$(jq -r .version package.json)
          echo "pr_version=$PR_VERSION" >> $GITHUB_OUTPUT

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get main version
        id: main_version
        run: |
          MAIN_VERSION=$(jq -r .version package.json)
          echo "main_version=$MAIN_VERSION" >> $GITHUB_OUTPUT

      - name: Create Status Check
        uses: actions/github-script@v7
        with:
          script: |
            const prVersion = '${{ steps.pr_version.outputs.pr_version }}';
            const mainVersion = '${{ steps.main_version.outputs.main_version }}';
            const isVersionUpdated = prVersion !== mainVersion;
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: isVersionUpdated ? 'success' : 'failure',
              description: isVersionUpdated 
                ? `Version updated from ${mainVersion} to ${prVersion}` 
                : 'Version must be updated in package.json',
              context: 'Version Check'
            });
            
            if (!isVersionUpdated) {
              core.setFailed('Version in package.json has not been updated');
            }
